0
: 
pageContent
: 
"# Learning-Javascript with its source files \n#also with css and html\n"
source
: 
"README.md"
[[Prototype]]
: 
Object
1
: 
pageContent
: 
"// this is a master class about javascript\r\n\r\n//it starts from scratch levels \r\n\r\n// variables declarations const,let,var ;\r\n// it is good to use const for immuntable and let for mutable, var is not prefered \r\n \r\n let name = 'India is a great country'\r\n console.log (name)  //prints  the name \r\n// value=prompt(' this is how we ask a question in JS')\r\nvalue1 = number(prompt('this number function will convert it into intergers'))\r\n\r\n //Operators \r\n a= 10\r\n b = 24 \r\n console.log(a*b)\r\n\r\n /* Data Types \r\n      numbers = 2,10000,-4,4.3\r\n      strings = 'loving JS', \"crashing JS\"\r\n      arrays = [] linear homogenous datatype\r\n      boolean = true r false \r\n      objects = {} similar to dictionaries in python\r\n */\r\n\r\n/* Math methods\r\n       Math.floor() = rounds down(example)=>{12.42 = 12}\r\n       Math.ceil() = rounds up(example)=>{12.42 = 13}\r\n       Math.random() = picks a random number b/w 0 and 1 (example)=>{\r\n        Math.random()*3 (picks b/w 0 to 3)\r\n       }\r\n*/\r\n \r\n//conditional operators = checkout conditionalOperator.png\r\n\r\nif (a==b){\r\n    console.log('this is not the expected one')\r\n}\r\nelse{\r\n    console.log('this is the expected one')\r\n}\r\n\r\n//Functions \r\n\r\nfunction sampleCheck(){   //defining a function \r\n    console.log('this is an implicit function')\r\n}\r\nsampleCheck()    // calling that function when required\r\n\r\nfunction sampleCheck1(parameterPass){\r\n    console.log(parameterPass)\r\n}\r\nsampleCheck1('this is a function with a parameter passed')  //calling that function \r\n\r\n\r\n  // litoral templates - it makes string convictions much easier\r\n    a= 'graceshon'\r\n    let newVariable = 'hey'+ a + ' this is me' //this is a normal code \r\n    let newVariable1 = `hey ${a} this is me`  //this is using litoral templates\r\n \r\n// ES6 arrow functions   \r\n     /*syntax:\r\n          let/const functionName = (parameters)=> {\r\n            ---logical part---\r\n            return value\r\n          }\r\n     */\r\nconst sumArrow = (a,b)=> a+b   //fancy way without {} by ES6 AKA Arrow functions \r\n\r\nconsole.log(sumArrow(10,20))   // calling the function "
source
: 
"day1.js"
[[Prototype]]
: 
Object
2
: 
pageContent
: 
"#city-input, #weather-output {\n    max-width: 400px;\n    margin: 0 auto;\n}\n  \n.banner {\n    color: #FFD23F;\n    font-family: sans-serif;\n}"
source
: 
"day10.css"
[[Prototype]]
: 
Object
3
: 
pageContent
: 
"<!DOCTYPE html>\n<html>\n<head>\n    <title>Weather App</title>\n    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\" integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\" crossorigin=\"anonymous\">\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"day10.css\">\n    <script src=\"day10.js\"></script>\n</head>\n<body class=\"text-center\">\n    <main>\n        <h1 class=\"banner p-3\">Weather</h1>\n        <div class=\"form-group\">\n            <input id=\"city-input\" class=\"form-control form-control-lg\" type=\"text\" placeholder=\"Search city\">\n        </div>\n        <button type=\"button\" onclick=\"searchCity()\" class=\"btn btn-lg btn-dark\">Search</button>\n        <div id=\"weather-output\" class=\"mt-3\">\n          <div class=\"card-deck mb-3 text-center\">\n              <div class=\"card mb-4 shadow-sm\">\n                <div class=\"card-header\">\n                  <h4 id=\"city-name\" class=\"my-0 font-weight-normal\">----</h4>\n                </div>\n                <div class=\"card-body\">\n                  <h1 id=\"weather-type\" class=\"card-title\">----</h1>\n                  <ul class=\"list-unstyled mt-3 mb-4\">\n                    <li>Temp: <span id=\"temp\">--</span>°</li>\n                    <li>Min Temp: <span id=\"min-temp\">--</span>°</li>\n                    <li>Max Temp: <span id=\"max-temp\">--</span>°</li>\n                  </ul>\n                </div>\n              </div>\n          </div>\n        </div>\n    </main>\n</body>\n</html>"
source
: 
"day10.html"
[[Prototype]]
: 
Object
4
: 
pageContent
: 
"/**\n * Weather App\n */\n\n// API_KEY for maps api         \n\nlet API_KEY = \"a8e71c9932b20c4ceb0aed183e6a83bb\";\n\n/**\n * Retrieve weather data from openweathermap\n */\nconst getWeatherData = (city) => {\n  const URL = \"https://api.openweathermap.org/data/2.5/weather\";  //😃\n  const FULL_URL = `${URL}?q=${city}&appid=${API_KEY}&units=imperial`;\n  const weatherPromise  = fetch(FULL_URL);\n  return weatherPromise.then((response) => {\n    return response.json();\n  })\n}\n\n/**\n * Retrieve city input and get the weather data\n */\nconst searchCity = () => {\n  const city = document.getElementById('city-input').value;\n  getWeatherData(city)\n  .then((res)=>{\n    showWeatherData(res);\n  }).catch((error)=>{\n    console.log(error);\n    console.log(\"Something happend\");\n  })\n}\n\n/**\n * Show the weather data in HTML\n */\nshowWeatherData = (weatherData) => {\n  document.getElementById(\"city-name\").innerText = weatherData.name;\n  document.getElementById(\"weather-type\").innerText = weatherData.weather[0].main;\n  document.getElementById(\"temp\").innerText = weatherData.main.temp;\n  document.getElementById(\"min-temp\").innerText = weatherData.main.temp_min;\n  document.getElementById(\"max-temp\").innerText = weatherData.main.temp_max;\n}\n\n"
source
: 
"day10.js"
[[Prototype]]
: 
Object
5
: 
pageContent
: 
"/* TOPIC : Classes\n           methods\n           properties\n           */\n\nconst nums = [1,2,3]\n\n//CLASS \nclass Car {\n    constructor (name,color,topSpeed){\n      \n     //USING THIS WITH PEOPERTIES   \n    //this keyword is used to pass the object_name in the place of this \n    this.name = name \n    this.color = color\n    this.topSpeed = topSpeed\n    this.currentspeed = 0;\n} \n\n// USING A METHOD IN A CLASS\nstart(){\n    console.log('you are good to go');\n    this.currentSpeed += 10\n    console.log(`the driving speed is ${this.currentSpeed}`);\n}  \n\nzeroToSixty(){\n    setTimeout(() => {\n        console.log('that was fast')\n        this.currentSpeed = 60\n        console.log(this.currentSpeed);\n    })\n}\n\n//getters and setters in JS\ngetCurrentSpeed(){\n    return currentSpeed\n}\n\n//setting a default arguement \ndrive(speed = 10){\n//the value of speed is passed in but in case if there is no value then it set the default value as 10\n\n    this.currentSpeed += speed\n    console.log(`driving speed ${this.currentSpeed} km/h`);\n}\n}\nconst mclaren = new Car ('mclaren720s','orange',300)\nconsole.log(mclaren.name)\nconsole.log(mclaren.currentspeed)\nconsole.log(mclaren.topSpeed)\n//it takes name as mclaren720s\nmclaren.start()\nmclaren.zeroToSixty()\n\n//calling drive() 2 times from line 41\nmclaren.drive(40)\nmclaren.drive(80)\nconsole.log(mclaren.currentSpeed);\n//in the console the value will be 120 as both the value gets added\n\n//ARRAY\n\n//creating our own method for array\nArray.prototype.newPush = function(item){\n    return this.length\n}\n\nconst new1 = [12,15,42,53,68,34,27]\nconsole.log(new1.myPush('cookie'));"
source
: 
"day11.js"
[[Prototype]]
: 
Object
6
: 
pageContent
: 
"<!DOCTYPE html>\n<html>\n\n<head>\n  <meta charset=\"utf-8\">\n  <meta name=\"viewport\" content=\"width=device-width\">\n  <title>bank</title>\n  <link href=\"day12.css\" rel=\"stylesheet\" type=\"text/css\" />\n</head>\n\n<body>\n  <input type=\"text\" id='amount'>\n  <button id='deposit'>+Deposit</button>\n  <button id='withdraw'>-Withdraw</button>\n  <div id='balance'><p>Balance: 0</p></div>\n  <script src=\"day12.js\"></script>\n</body>\n\n</html>"
source
: 
"day12.html"
[[Prototype]]
: 
Object
7
: 
pageContent
: 
"class Bank {\n    constructor (balance){\n        this.balance = balance\n    }\n    withdraw(amount){\n        if (this.balance - amount < 0){\n            console.log('sorry your balance is not sufficient');\n\n            return\n        }\n\n        this.balance -= amount\n        console.log('withdrew', `$${amount}`)\n      console.log({balance: this.balance})\n     }\n    deposit(amount){\n        this.balance += amount\n        console.log('deposit', `$${amount}`)\n      console.log({balance: this.balance})\n    }\n}\n\nconst person1  = new Bank(0)\n\nconst depositButton = document.getElementById('deposit')\nconst withdrawButton = document.getElementById('withdraw')\nconst amountInput = document.getElementById('amount')\nconst balanceDiv = document.getElementById('balance')\n\ndepositButton.onclick = () => {\n    const amount = Number(amountInput.value) \n    person1.deposit(amount)\n    balanceDiv.innerText = `Balance :${person1.balance}`\n}\n\nwithdrawButton.onclick = () => {\n    const amount = Number(amountInput.value)\n    person1.withdraw(amount)\n    balanceDiv.innerText = `Balance: ${person1.balance}`\n  }"
source
: 
"day12.js"
[[Prototype]]
: 
Object
8
: 
pageContent
: 
"// WHILE LOOPS || add EventListerner || <audio> Tags\n\n//while loops \nlet n = 0\n\nwhile (n<5){\n    console.log(\"looping\",n);\n    n++\n}\n\n//addEventListener() - its a method\n\nlet play = document.getElementById('play')\n\nplay.addEventListener('click',function(){\n    console.log('hello world');\n})\n\n\n//here document refers as a whole of HTML  \ndocument.addEventListener('keyword',fuction (e){\n    //keyword is an event and \"e\" is the event listener\n\n    if(e.key == \"q\") {\n        console.log('you pressed q');\n        document.getElementById('punch').play()\n    }else {\n        console.log('that is not q');\n    }\n})\n \n//<audio> Tags\n\n//sample HTML page \n  /*<Audio src=\"sounds/hit.wav\"\n        style =\"display: none\"\n        type =\"audio/mpeg\"\n        id = \"punch\">\n        </Audio> */\n\n //checkout line 26\n\n if (condition) {\n    \n } else {\n    \n }"
source
: 
"day13.js"
[[Prototype]]
: 
Object
9
: 
pageContent
: 
"@import url('https://fonts.googleapis.com/css2?family=VT323&display=swap');\n\n\nbody {\n  background:'blue';\n  width: 100%;\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  font-family: 'VT323', monospace;\n}\n\n.menu {\n  width: 50%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n#p1 {\n  width:100px;\n  height:100px;\n}\n\n.p1Info {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 300px;\n  width: 300px;\n/*   background: red; */\n}\n\n#p1Name {\n  font-size: 30px;\n}\n\n#p1Health {\n  font-size: 50px;\n}\n\n#p2{\n  width:100px;\n  height:100px;\n}\n\n\n.p2Info {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 300px;\n  width: 300px;\n/*   background: red; */\n}\n\n#p2Name {\n  font-size: 30px;\n}\n\n#p2Health {\n  font-size: 50px;\n}\n\n.playerControls {\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n \n}\n\n.AttackDiv{\n  display: flex;\n  align-items:center;\n  justify-content: space-around;\n  height: 40px;\n  width: 100px;\n/*   background: blue; */\n}\n\n.HealDiv {\n  display: flex;\n  align-items:center;\n  justify-content: space-around;\n  height: 40px;\n  width: 100px;\n/*   background: yellow; */\n}\n\n#attack {\n  height: 30px;\n  width: 60px;\n  border-radius: 50px;\n  border:none;\n  background: #FFFF01;\n  outline: none;\n\n}\n\n#heal {\n  height: 30px;\n  width: 60px;\n  border-radius: 50px;\n  border:none;\n  background: #7DFFFF;\n  outline: none;\n\n}\n\n#play {\n  height: 50px;\n  width: 120px;\n  border-radius: 20px;\n/*   border:none; */\n  background: #02cf02;\n  outline: none;\n  color: white;\n}\n\n#result {\n  font-size: 50px;\n  color : #3dff3d;\n}\n\n#reset {\n  margin-top: 20px;\n  height: 50px;\n  width: 100px;\n  border-radius: 20px;\n/*   border:none; */\n  background: #FF8800;\n  outline: none;\n  color: white;\n}\n\n.resultContainer {\n    display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n  height:150px;\n  width: 300px;\n}"
source
: 
"day14.css"
[[Prototype]]
: 
Object
10
: 
pageContent
: 
"<!DOCTYPE html>\n<html>\n\n<head>\n  <meta charset=\"utf-8\">\n  <meta name=\"viewport\" content=\"width=device-width\">\n  <title>replit</title>\n  <link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" />\n</head>\n\n<body>\n  \n  <br>\n  \n  <div class=\"menu\">\n    <div class=\"p1Info\">\n\n      <div id=\"p1Name\">Player 1</div>\n      \n      <img \n      id=\"p1\" \n      src=\"https://i.gifer.com/origin/00/0019f6845ceaa9347b881ccbe8f5644a_w200.gif\"\n      />\n      \n      <div class=\"playerControls\">\n\n        <div class=\"AttackDiv\">\n          <h3>Q:</h3>\n          <button \n            onclick = \"player1.strike(player1, player2, player1.attackDmg)\"  \n            id=\"attack\"\n          >\n            Attack\n          </button>\n        </div>\n\n        <div class=\"HealDiv\">\n          <h3>A:</h3>\n          <button \n            onclick = \"player1.heal(player1)\" \n            id=\"heal\"\n          >\n            Heal\n          </button>\n          </div>\n      </div>\n      \n      <div  id=\"p1Health\">100</div>\n    </div>\n\n      <button id=\"play\">Simulate</button>\n\n    <div class=\"p2Info\">\n\n      <div id=\"p2Name\">Player 2</div>\n      \n      <img \n        id=\"p2\" \n        src=\"https://i.imgur.com/Z0QCi47.gif\"\n      />\n      <div class=\"playerControls\">\n        <div class=\"AttackDiv\">\n          <h3>P:</h3>\n          <button \n            onclick = \"player2.strike(player2, player1, player2.attackDmg)\"  \n            id=\"attack\"\n          >\n            Attack\n          </button>\n        </div>\n        <div class=\"HealDiv\">\n          <h3>L:</h3>          \n          <button \n            onclick = \"player2.heal(player2)\" \n            id=\"heal\"\n          >"
source
: 
"day14.html"
[[Prototype]]
: 
Object
11
: 
pageContent
: 
"// creating a game using the concepts of JS\n\n/* \n🌟 APP: Fighting Game\n\nCreate an updateGame() function that will update the DOM with the state of the game 👇\n========================================\n\n- updateGame()\n\nThese are the 2 classes you must create and their methods 👇\n========================================\n\nclass Player {\n  - strike()\n  - heal()\n}\n\nclass Game {\n  - play()\n  - checkIsOver()\n  - declareWinner()\n  - reset()\n}\n\nThese functions are hard coded in the HTML. So, you can't change their names.\n\nThese are all the DIV ID's you're gonna need access to 👇\n========================================================\n#1 ID 👉 'play' = Button to run simulation\n#2 ID 👉 'result' = Div that holds the winner of the match\n#3 ID 👉 'p1Name' = Div that holds player 1's Name\n#4 ID 👉 'p2Name' = Div that holds player 2's Name\n#5 ID 👉 'p1Health' = Div that holds player 1's health\n#6 ID 👉 'p2Health' = Div that holds player 2's health\n*/\n\n// ** Grabs elements from the DOM and stores them into variables **\nlet playButton = document.getElementById('play')\nlet resultDiv = document.getElementById('result')\nlet p1NameDiv = document.getElementById('p1Name')\nlet p2NameDiv = document.getElementById('p2Name')\nlet p1HealthDiv = document.getElementById('p1Health')\nlet p2HealthDiv = document.getElementById('p2Health')\n\n// ** Check if either players health is  0 and if it is, then update isOver to true **\nconst updateGame = (p1,p2,gameState) => {\n  // Update the DOM with the names and the latest health of players\n\n  // Condition IF either player health is <= 0 then set isOver to true and declareWinner\n\n}\n\n// ** Create the Player class which can create a player with all it's attributes and methods **\n// qazi = new Player('Qazi', 100, 7)\n// qazi.name 👉 'Qazi'\n// qazi.health 👉 100\n// qazi.attackDmg 👉 7\nclass Player {\n  constructor(name, health, attackDamage) {\n    this.name = name;\n    this.health = health;\n    this.attackDmg = attackDamage;\n  }\n  // ** Attack an enemy with a random number from 0 to YOUR attackDmg bonus **\n  strike (player, enemy, attackDmg) {\n    \n    // Get random number between 1 - 10 and that is damageAmount\n\n    // Subtract the enemy health with the damageAmount\n\n    //  Update the game and DOM with updateGame()\n\n    //  Return a message of 'player name attacks enemy name for damageAmount'\n\n  }\n  // ** Heal the player for random number from  1 to 5 **\n  heal (player) {\n    \n    // Get random number between 1 - 5 and store that in hpAmount\n\n    // Add hpAmount to players health\n\n    //  Update the game and DOM with updateGame()\n\n    //  Return a message of 'player name heals for hpAmount HP'\n\n  }\n}\n\n// ** Create the Game class with all it's attributes and methods to run a match **\n// game = new Game()\n// game.isOver 👉 false\nclass Game {\n  constructor() {\n    this.isOver = false;\n  }\n\n  // ** If the game is over and a player has 0 health declare the winner! **\n  declareWinner(isOver,p1, p2) {\n    \n    // Create a message variable that will hold a message based on the condition\n\n    // If isOver is true AND p1 health is <= 0 then update message variable  to 'p1 WINS!'\n\n    // Else if isOver is true AND p2 health is <= 0 then update message variable  to 'p2 WINS!'\n    // Play victory sound\n\n    // Return message variable \n\n  }\n\n  // ** Reset the players health back to it's original state and isOver to FALSE **\n  reset(p1,p2) {\n    // set p1 health and p2 health back to 100 and isOver back to false and clear resultDiv.innerText and don't forget to updateGame()\n\n  }\n  \n  // ** Simulates the whole match untill one player runs out of health **\n  play(p1, p2) {\n    // Reset to make sure player health is back to full before starting\n\n    // Make sure the players take turns untill isOver is TRUE\n    while (!this.isOver) {\n      //Make sure both players get strike() and heal() once each loop\n    }\n    // Once isOver is TRUE run the declareWinner() method \n    \n  }\n\n}\n\n// ** Create 2 players using the player class **\n\n\n// ** Save original Player Data into a variable in order to reset **\nlet p1;\nlet p2;\n\n// ** Create the game object from the Game class **\n\n// ** Intialize the game by calling updateGame() **\n\n\n// ** Save intial isOver from the game object inside this variable **\nlet gameState;\n\n\n// ** Add a click listener to the simulate button that runs the play() method on click and pass in the players **\n\n\n// Add functionality where players can press a button to attack OR heal\n\n// ** Player 1 Controls **\ndocument.addEventListener('keydown', function(e) {\n  // if you press Q AND the enemy health is greater than 0 AND isOver is still false then strike()\n\n    // After striking then play attack sound\n\n});\n\ndocument.addEventListener('keydown', function(e) {\n  \n  // if you press a AND the player health is greater than 0 AND isOver is still false then strike()\n\n    // After healing then play heal sound\n\n});\n\n// ** Player 2 Controls **\ndocument.addEventListener('keydown', function(e) {\n  \n  // if you press p AND enemy health is greater than 0 AND isOver is still false then stike()\n\n    // After striking then play attack sound\n\n});\n\ndocument.addEventListener('keydown', function(e) {\n  // if you press l AND the player health is greater than 0 AND isOver is still false then heal()\n\n    // After healing then play heal sound\n\n});\n"
source
: 
"day14.js"
[[Prototype]]
: 
Object
12
: 
pageContent
: 
"body {\n    background-color: #111;\n    color: white;\n    font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;\n    margin: 0;\n  }\n  \n  .dropdown-container {\n    position: absolute;\n    top: 100%;\n    right: 0;\n    padding-top: 3px;\n    display: none;\n  }\n  \n  .dropdown {\n    background-color: black;\n    padding: 8px;\n    border-radius: 4px;\n    width: 100px;\n  }\n  \n  .dropdown span {\n    cursor: pointer;\n  }\n  \n  .original__movies {\n    padding-top: 20px;\n    padding-bottom: 20px;\n  }\n  \n  .profile:hover .dropdown-container {\n    display: block;\n  }\n  \n  .original__movies,\n  .movies__container {\n    padding-left: 50px;\n    display: flex;\n    overflow-x: scroll;\n    overflow: hidden;\n  }\n  \n  .original__movies::-webkit-scrollbar {\n    display: none;\n  }\n  \n  .original__movies img {\n    margin-right: 10px;\n    height: 250px;\n    width: auto;\n  }\n  \n  .original__movies img,\n  .movies__container img {\n    transition: all 0.2s ease-out;\n    cursor: pointer;\n  }\n  \n  .original__movies img:hover,\n  .movies__container img:hover {\n    transform: scale(1.1);\n  }\n  \n  .movies__container img {\n    margin-right: 10px;\n    width: 200px;\n  }\n  \n  header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding-left: 15px;\n    padding-right: 15px;\n    position: absolute;\n    z-index: 100;\n    top: 0;\n    left: 0;\n    right: 0;\n    padding-top: 15px;\n  }\n  \n  .logo > img {\n    width: 120px;\n  }\n  \n  .profile {\n    position: relative;\n  }\n  \n  .profile > img {\n    width: 40px;\n  }\n  \n  img {\n    width: 100px;\n  }\n  \n  .featured {\n    height: 400px;\n    position: relative;\n    background-image: url('https://image.tmdb.org/t/p/original//3lBDg3i6nn5R2NKFCJ6oKyUo2j5.jpg');\n    background-size: cover;\n    background-position: center;\n    padding: 0 0 0 30px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n  }\n  \n  .featured::after {\n    content: '';\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    height: 7.4rem;\n    background-image: linear-gradient(\n      180deg,\n      transparent,\n      rgba(37, 37, 37, 0.61),\n      #111\n    );\n  }\n  \n  .netflixOriginals h2,\n  .movies__header h2 {\n    padding-left: 30px;\n  }\n  \n  .featured h2 {\n    font-size: 50px;\n    margin: 0;\n    z-index: 10;\n  }\n  \n  .featured .featured__buttons {\n    z-index: 10;\n  }\n  \n  .featured .featured__buttons button {\n    font-size: 16px;\n    color: white;\n    background-color: rgba(109, 109, 110, 0.7);\n    border: none;\n    padding: 8px 24px;\n    border-radius: 4px;\n  }\n  \n  .featured::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: rgba(0, 0, 0, 0.3);\n  }\n  \n  .featured .featured__buttons .button__play {\n    background-color: white;\n    color: black;\n  }\n  \n  .button__play i {\n    margin-right: 6px;\n  }\n  \n  .featured .featured__description {\n    max-width: 350px;\n    font-weight: 400;\n    text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.45);\n    z-index: 10;\n  }\n  \n  .modal-body iframe {\n    width: 100%;\n  }\n  \n  .modal-body span {\n    color: #333;\n    width: 100%;\n    display: flex;\n    height: 60px;\n    justify-content: center;\n    align-items: center;\n  }"
source
: 
"day15.css"
[[Prototype]]
: 
Object
13
: 
pageContent
: 
"<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>Netflix Clone</title>\n    <link\n      rel=\"stylesheet\"\n      href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/css/bootstrap.min.css\"\n      integrity=\"sha384-TX8t27EcRE3e/ihU7zmQxVncDAy5uIKz4rEkgIXeMed4M0jlfIDPvg6uqKI2xXr2\"\n      crossorigin=\"anonymous\"\n    />\n    <link rel=\"stylesheet\" href=\"day15.css\" />\n    <script src=\"https://kit.fontawesome.com/c939d0e917.js\"></script>\n  </head>\n  <body>\n    <header>\n    </header>\n    <main>\n      <div class=\"featured\">\n        <h2>Title</h2>\n        <div class=\"featured__buttons\">\n          <button class=\"button__play\"><i class=\"fas fa-play\"></i>Play</button>\n          <button>My List</button>\n        </div>\n        <div class=\"featured__description\">\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam tristique\n          magna magna, vit...\n        </div>\n      </div>\n      <div class=\"netflixOriginals\">\n        <div class=\"original__header\">\n          <h2>NETFLIX ORIGINALS</h2>\n        </div>\n        <div class=\"original__movies\">\n          <!-- Orignal Movies List Here -->\n        </div>\n      </div>\n      <div class=\"movies\">\n        <div class=\"movies__header\">\n          <h2>Wishlist</h2>\n        </div>\n        <div id=\"wishlist\" class=\"movies__container\"></div>\n        <div class=\"movies__header\">\n          <h2>Trending Now</h2>\n        </div>\n        <div id=\"trending\" class=\"movies__container\">\n          <!-- Trending Movies List Here -->\n        </div>\n        <div class=\"movies__header\">\n          <h2>Top Rated</h2>\n        </div>\n        <div id=\"top_rated\" class=\"movies__container\">\n          <!-- Top Rated Movies List Here -->\n        </div>\n      </div>\n    </main>\n    <!-- Modal -->\n    <div\n      class=\"modal fade\"\n      id=\"trailerModal\"\n      tabindex=\"-1\"\n      role=\"dialog\"\n      aria-hidden=\"true\"\n    >\n      <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header\">\n            <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Modal title</h5>\n            <button\n              type=\"button\"\n              class=\"close\"\n              data-dismiss=\"modal\"\n              aria-label=\"Close\"\n            >\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n          <div class=\"modal-body\">\n            <span class=\"movieNotFound\">Trailer Not Found</span>\n            <iframe\n              id=\"movieTrailer\"\n              height=\"400\"\n              src=\"\"\n              frameborder=\"0\"\n              allow=\"autoplay; encrypted-media\"\n              allowfullscreen\n            ></iframe>\n          </div>\n        </div>\n      </div>\n    </div>\n    <script\n      src=\"https://code.jquery.com/jquery-3.5.1.slim.min.js\"\n      integrity=\"sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj\"\n      crossorigin=\"anonymous\"\n    ></script>\n    <script\n      src=\"https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/js/bootstrap.bundle.min.js\"\n      integrity=\"sha384-ho+j7jyWK8fNQe+A12Hb8AhRq26LrZ/JpcUGGOn+Y7RsweNrtN/tE3MoK7ZeZDyx\"\n      crossorigin=\"anonymous\"\n    ></script>\n    <script src=\"day15.js\"></script>\n  </body>\n</html>"
source
: 
"day15.html"
[[Prototype]]
: 
Object
14
: 
pageContent
: 
"/* \nHere we have the Netflix app but it's up to you to make it work by pulling all the movies using an API!\n\n- getOriginals()\n  * URL : 'https://api.themoviedb.org/3/discover/tv?api_key=19f84e11932abbc79e6d83f82d6d1045&with_networks=213'\n- getTrendingNow()\n  * URL : 'https://api.themoviedb.org/3/trending/movie/week?api_key=19f84e11932abbc79e6d83f82d6d1045'\n- getTopRated()\n  * URL : 'https://api.themoviedb.org/3/movie/top_rated?api_key=19f84e11932abbc79e6d83f82d6d1045&language=en-US&page=1'\n** These functions will provide the URL you need to fetch() movies of that genere **\nThese are all the DIV ID's you're gonna need access to 👇\n========================================================\n#1 CLASS 👉 'original__movies' = Div that holds Netflix Originals\n#2 ID 👉 'trending' = Div that holds trending Movies\n#3 ID 👉 'top_rated' = Div that holds top rated Movies\n*/\n// parameters used\n    // url we give what kind of url we need (url of orginals || trending || TopRated)\n    // dom_element we give the tpye whether it is Orginals || Trending || TopRated\n    // path_type gives the type of file which is gonna be displayed (backdrop_path || poster_path)\n\n// Call the main functions the page is loaded =>1\nwindow.onload = () => {\n    getOriginals()\n    getTrendingNow()\n    getTopRated()\n  }\n\n  // ** function that makes dynamic API calls **\n  function fetchMovies(url, dom_element, path_type) {\n    \n    fetch(url)\n    .then(response => {\n        if(response.ok){\n            return response.json()\n        }\n        else{\n            throw new error(\"something went wrong\")\n        }\n    }).then(data =>{\n        showMovies(data,dom_element,path_type)\n    }).catch(error =>{ \n        console.log(error);\n    })\n  }\n  //  ** Function that displays the movies to the DOM **\n  showMovies = (movies, dom_element, path_type) => { \n    // Create a variable that grabs id or class  line 13,14,15\n      let moviesElement = document.querySelector(dom_element)\n\n    // Loop through object\n    for(let movie of movies.results){\n        console.log(movie);\n          \n      // Within loop create an img element to create an img tag inside HTML\n        var imageElement = document.createElement('img')\n  \n      // Set attribute (getting the id from the api object and set it in HTML)\n        imageElement.setAttribute('data-id',movie.id)\n  \n      // Set source\n         imageElement.src = `https://image.tmdb.org/t/p/original${movie[path_type]}`\n  \n      // Add event listener to handleMovieSelection() onClick\n       \n    \n      // Append the imageElement to the dom_element selected\n        moviesElement.appendChild(imageElement)\n    }\n\n  \n    }\n  \n  // ** Function that fetches Netflix Originals **\n  function getOriginals() {\n    let url =  \n    'https://api.themoviedb.org/3/discover/tv?api_key=19f84e11932abbc79e6d83f82d6d1045&with_networks=213'\n    \n  fetchMovies(url,'.original__movies','posterpath')\n   \n\n  }\n  // ** Function that fetches Trending Movies **\n  function getTrendingNow() {\n    let url =\n    'https://api.themoviedb.org/3/trending/movie/week?api_key=19f84e11932abbc79e6d83f82d6d1045'\n  fetchMovies(url, '#trending', 'backdrop_path')\n  }\n  // ** Function that fetches Top Rated Movies **\n  function getTopRated() {\n    let url =\n    'https://api.themoviedb.org/3/movie/top_rated?api_key=19f84e11932abbc79e6d83f82d6d1045&language=en-US&page=1'\n  fetchMovies(url, '#top_rated', 'backdrop_path')\n  }\n  \n  // ** BONUS **\n  \n  // ** Fetches URL provided and returns response.json()\n  async function getMovieTrailer(id) {\n    //URL: `https://api.themoviedb.org/3/movie/${id}/videos?api_key=19f84e11932abbc79e6d83f82d6d1045&language=en-US`\n  \n  }\n  \n  // ** Function that adds movie data to the DOM\n  const setTrailer = trailers => {\n    // Set up iframe variable to hold id of the movieTrailer Element\n\n    // Set up variable to select .movieNotFound element\n  \n    // If there is a trailer add the src for it\n    if (trailers.length > 0) {\n      // add d-none class to movieNotFound and remove it from iframe\n  \n      // add youtube link with trailers key to iframe.src\n    } else {\n      // Else remove d-none class to movieNotfound and ADD it to iframe\n  \n    }\n  }"
source
: 
"day15.js"
[[Prototype]]
: 
Object
15
: 
pageContent
: 
"// TOPICS: arrays\n\nconst brand = [apple, honor,redmi,samsung,dell]\nconsole.log(brand[0])  //prints apple\n \n\n//adding a new element to the array \nbrand.push(asus)\nconsole.log(brand)\n\n//selecting the elements to consider and remves the rest of em \nbrand.slice(0,3)  // uses index and doesnt consider the 3rd value\nconsole.log(brand)\n\n//getting the Index value \nbrand.indexOf (asus)\nconsole.log(brand)\n\n// geting the number of elements present in an array\nconsole.log(brand.length)\n\n//using Objects (AKA dictionaries in phython)\nconst person = {\n    name: 'john doe',\n    age : 12,\n    shirt : 'white'\n}\n\n//dot notation \nconsole.log(person.name)\nconsole.log(person.age)\nperson.job = 'manager'\n\n//bracket notation \nconsole.log(person['name'])\nconsole.log(person['age'])\nperson['address'] = 'tamil nadu'\n\n\nconst indtroducer = (name,shirt) =>{\n    const person = {\n        name : name ,\n        shirt : shirt\n    }\n       `this is the name and age of the person ${person.name} ${person.shirt}`\n}\n\nconsole.log(indtroducer('joe','black'))//calling a function \n\n//getting a bit advanced in objects using methods\n\n\nconst person2 = {\n    name: 'joe doe',\n    age : 15,\n    asserts : 100000 , \n    liabilities : 200000  ,\n    netWorth : function(){\n        this.asserts - this.liabilities\n    }\n}\n\nconst intro = `this is a text for the person2 and calling the values ${person2.age}  \nand ${person2.netWorth()} NOTE: that networth is a function now not a property`\n\n// FOR LOOPS\n\nfor (let i=0; i<fruits.length; i++){    //Old way kinda outdated\n    console.log(fruits[i])\n}\n\n\nfor (let fruit of fruits){        //New way also looks much better \n    console.log(fruit)\n}\n\n//Creating a new array with twice the values of the given array\n\nlet given = [2,5,7,3,6,1,4,2,,4,8]\nlet result = []   //empty array\n\nfor (let i of given){        \n    result.push(i*2)\n}\nconsole.log(result)\n\n//Doing that same thing using loops with arrow function \n\nlet newGiven = (given) =>{\n    let result =[]\n\n    for (i of given){\n        result.push(i*2)\n    }\n    return result;\n}\n\nconsole.log(newGiven(1,2,3,4,5,6,7,8,9));"
source
: 
"day2.js"
[[Prototype]]
: 
Object
16
: 
pageContent
: 
"//GETTING ADVANCED WITH ARRAY AND OBJECTS\n\nlet array = ['stack','queue','linkedlist','tree','graph']\n\n/*the keyword 'of' denotes the value in each array \n   every time the value of 'element' becomes \n     stack \n     queue\n     linkedlist \n     tree \n     graph */\nfor (const element of array){\n    console.log(element)\n}\n\n/*the keyword 'in' denotes the index of each array \n   every time the value of 'element' becomes \n     0 \n     1\n     2 \n     3 \n     4 */\n     for (const element in array){\n        console.log(element)\n    }\n\n     //Program to count the number of letters in a sentence\n\n     const howManyLetters = ()=>{\n        const sentence = 'India is my country all indians '\n\n        let resultNumber = 0\n\n        for (index in sentence){\n            console.log(Number(index)+1)        //the keyword 'Number' is used to typecast(convert) string to numbers\n            result =(Number(index)+1) \n        }\n        return {result}  // this curly braces will help to print the word 'result' as well as its value \n     }\n     console.log(howmanyNumber());\n\n\n     //Program for counting the letters and its frequency \n\n     const letterFrequency = (phrase)=>{\n        let eachLetter = {}\n\n        for (index of phrase){\n            if (eachLetter.index == 0){\n                eachLetter.index = 1\n            }\n            else{\n                eachLetter.index = eachLetter.index +1\n            }\n        }\n        return {eachLetter}\n     }\n\n     let sentence = 'hello world this is india'\n     console.log(letterFrequency(sentence))"
source
: 
"day3.js"
[[Prototype]]
: 
Object
17
: 
pageContent
: 
"// THIS IS ABOUT HIGHER ORDER FUNCTIONS\n              /*\n.map()\n.filter()\n.reduce()     */\n\n//MAP\n\n [1,2,3,4,5,6].map(number => console.log(number))\n\n     //.map() is basically a looping function\n     //loops and returns an array\n     //each array gets passed to 'number'\n\nlet result = [1,2,3,4,5,6].map(number => number * 2)\nconsole.log(result)\n\n//FILTER\n\nlet result2 = [1,2,3,4,5,6].filter(number => number > 2)\nconsole.log(result2)\n\n     //.filter loops and returns an array based onthe given conditions\n\n\n//REDUCE\n\nlet result3 = [1,2,3,4].reduce((prev, curr) => prev+curr,0 ) \nconsole.log(result3)\n    //Need to do sum then use reduce\n    //here it adds the previous and current values  causing an accumulation \n    /* like 1+2 becomes 3 \n       3+3 becomes 6\n       6+4 becomes 10\n       i uused 0 at the end which denotes the initial values to start the operation */\n\nactors.reduce((prev,curr)=> prev + curr.networth,0)\n       \n      "
source
: 
"day4.js"
[[Prototype]]
: 
Object
18
: 
pageContent
: 
"<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title >\n        DOM manipulation \n    </title>\n</head>\n<body>\n    <!--creating an id as title -->\n    <div>\n        <h2 id=\"title\">Hello World</h2>\n    </div>\n\n\n\n    <!--Creating rock/paper/scissors game-->\n    <div>\n       <div id=\"red\" style=\"height: 100px; width: 100px; background-color:red;\"\n       class=\"color-square\" value=\"red\" ></div>\n       <div id=\"yellow\" style=\"height: 100px ;width: 100px ;background-color:yellow;\"\n       class=\"color-square\" value=\"yellow\"></div>\n       <div id=\"green\" style=\"height: 100px ;width: 100px ;background-color:green;\"\n       class=\"color-square\" value=\"green\"></div>\n    </div>\n\n    <button id=\"clearGame\">clear game</button>\n\n    <script src=\"day5.js\"></script>\n</body>\n</html>  "
source
: 
"day5.HTML"
[[Prototype]]
: 
Object
19
: 
pageContent
: 
"// ---DOM MAINPULATION---\n   \nconsole.log('hello')\n\nlet title = document.getElementById ('title')\nconsole.log(title.innerText)\n\n\nlet result = 'this is the new text'\ntitle.innerText = result   \n\ntitle.innerHTML = '<p>HELLO</p>' // this changes the h2 tag to p tag NOTE: '.innerHTML'\n\n//Adding (or) manippulating tags in HTML using JS\n title.style.color='red'\n\n //Creating rock/paper/scissors game(logical)\n\n let redDiv = document.getElementById('red')\n let yellowDiv = document.getElementById('yellow')\n let greenDiv = document.getElementById('green')\n\n//.onclick will pass the function when you click on that tag (dom way)\n\n redDiv.onclick = () => console.log('red')\n yellowDiv.onclick = () => console.log('yellow')\n greenDiv.onclick = () => console.log('green')\n\n\n //Using Query selector \nlet square = document.querySelectorAll('.color-square')\n\n//Using forEach (looping function)\nsquare.forEach(square => console.log(square.value))\n\n//Doing that .onclick thing using forEach()\n\nsquare.forEach(square.onclick = () => {\n    console.log(square.value)\n\n})\n\n// Increasing the count of the click bassed on the color of the boxes \nconst timesClicked = {'red' : 0, 'yellow':0 , 'green':0}\nsquare.forEach(square = () => {\n    square.onclick = () =>\n    timesClicked[square.value] += 1\n    square.innerText = timesClicked[square.value]\n    \n}\n     );\n\n// Clearing the values by reseting them \n\nlet clearValues = () => {\n    timesClicked[square.value] = 0\n    square.forEach(square => square.innerText = 0\n         )\n}\n   \nlet clearGameBtn = document.getElementById('clearGame')\nclearGameBtn.onclick = () => clearValues()"
source
: 
"day5.js"
[[Prototype]]
: 
Object
20
: 
pageContent
: 
"* {\n    font-family: 'M PLUS Rounded 1c', Avenir Next, Helvetica, sans-serif;\n    color: white;\n  }\n  \n  body {\n    background: #8990ec;\n  }\n  \n  .wrapper {\n    height: 525px;\n    width: 360px;\n    color: white;\n    background: #272639;\n    border-radius: 1rem;\n    padding: 1.2rem;\n    margin: 100px auto;\n  }\n  \n  #topContainer {\n    margin-top: 4rem;\n  }\n  \n  .container {\n    margin-top: 1.4rem;\n  }\n  \n  .title {\n    font-weight: bold;\n    margin-bottom: 0.6rem;\n  }\n  \n  .inputContainer {\n    background: #353959;\n    border-radius: 10px;\n    padding: 0 0.8rem;\n    display: flex;\n    align-items: center;\n  }\n  \n  #billTotalInput,\n  #tipInput {\n    font-size: 1.2rem;\n    background: none;\n    border: none;\n    outline: none;\n    padding: none;\n  }\n  \n  .buttonContainer {\n    background: #8990ec;\n    display: grid;\n    place-items: center;\n    width: 1.6rem;\n    height: 1.6rem;\n    border-radius: 25%;\n  }\n  \n  .splitButton {\n    background: none;\n    border: none;\n  }\n  \n  .controls {\n    display: flex;\n    align-items: center;\n  }\n  \n  .splitButton {\n    font-size: 0.8rem;\n    font-weight: bold;\n    display: grid;\n    place-items: center;\n  }\n  \n  .buttonText {\n    color: #353959 !important;\n  }\n  \n  .splitAmount {\n    font-size: 1.6rem;\n    margin: 0.8rem;\n  }\n  \n  #bottom {\n    display: flex;\n    justify-content: space-between;\n  }\n  \n  .totalContainer {\n    display: flex;\n    flex-direction: column;\n    align-items: end;\n  }\n  \n  .total {\n    font-size: 2rem;\n  }"
source
: 
"day6.css"
[[Prototype]]
: 
Object
21
: 
pageContent
: 
"\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin />\n    <link\n      href=\"https://fonts.googleapis.com/css2?family=M+PLUS+Rounded+1c:wght@500&display=swap\"\n      rel=\"stylesheet\"\n    />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <link rel=\"stylesheet\" href=\"day6.css\" type=\"text/css\" />\n    <title>Tip Calculator</title>\n  </head>\n  <body>\n    <div class=\"wrapper\">\n      <div class=\"container\" id=\"topContainer\">\n        <div class=\"title\">Bill total</div>\n        <div class=\"inputContainer\">\n          <span>$</span>\n          <input\n            onkeyup=\"calculateBill()\"\n            type=\"text\"\n            id=\"billTotalInput\"\n            placeholder=\"0.00\"\n          />\n        </div>\n      </div>\n      <div class=\"container\">\n        <div class=\"title\">Tip</div>\n        <div class=\"inputContainer\">\n          <span>%</span>\n          <input\n            onkeyup=\"calculateBill()\"\n            type=\"text\"\n            id=\"tipInput\"\n            placeholder=\"10\"\n          />\n        </div>\n      </div>\n      <div class=\"container\" id=\"bottom\">\n        <div class=\"splitContainer\">\n          <div class=\"title\">People</div>\n          <div class=\"controls\">\n            <span class=\"buttonContainer\">\n              <button class=\"splitButton\" onclick=\"increasePeople()\">\n                <span class=\"buttonText\">+</span>\n              </button>\n            </span>\n            <span class=\"splitAmount\" id=\"numberOfPeople\">1</span>\n            <span class=\"buttonContainer\">\n              <button class=\"splitButton\" onclick=\"decreasePeople()\">\n                <span class=\"buttonText\">-</span>\n              </button>\n            </span>\n          </div>\n        </div>\n        <div class=\"totalContainer\">\n          <div class=\"title\">Total per Person</div>\n          <div class=\"total\" id=\"perPersonTotal\">$0.00</div>\n        </div>\n      </div>\n    </div>\n    \n    <script type=\"text/javascript\" src=\"day6.js\"></script>\n  </body>\n</html>\n"
source
: 
"day6.html"
[[Prototype]]
: 
Object
22
: 
pageContent
: 
"// THIS IS A TIP CALCULATOR APP \n\n\n//first GET total bill amount\nlet billTotalInputDiv = document.getElementById('billTotalInput')\n\n//then, GET the tip amount , \nlet tipInputDiv = document.getElementById('tipInput')\n\n//now, GET the no of people \nlet numberOfPeopleDiv = document.getElementById('numberOfPeople')\n\n//here the calculation occurs and POST \nlet perPersonTotalDiv = document.getElementById('perPersonTotal')\n\nlet numberOfPeople = Number(numberOfPeopleDiv.innerText)\n\nconst calculateBill = () => {\n\n     let totalbill = Number(billTotalInputDiv.value)\n     let tipPercentage = Number(tipInputDiv.value)/100\n\n     const totalTip = totalbill * tipPercentage\n\n     const total = totalTip + totalbill\n\n     const perPersonTotal = total/ numberOfPeople \n     \n     perPersonTotalDiv.innerText = `$${perPersonTotal.toFixed(2)}`\n\n// .toFixed() is used to declare how many number of decimals value  \n    }\n\n\nconst increasePeople  = () => {\n\n     numberOfPeople += 1\n     numberOfPeopleDiv.innerText = numberOfPeople\n     calculateBill()\n}\n\nconst decreasePeople = () => {\n    \n    if(numberOfPeople <= 1){\n        return\n        /* this is a gaurd function which basically means that \n        the decreasePeople() will get returned with no value if \n        its true. Else, it goes down that is numberOfPeople */ \n    }\n    numberOfPeople -= 1\n    numberOfPeopleDiv.innerText = numberOfPeople\n    calculateBill()\n}"
source
: 
"day6.js"
[[Prototype]]
: 
Object
23
: 
pageContent
: 
"html, body {\n    height: 100%;\n    width: 100%;\n    padding: 0;\n    margin:0;\n  }\n  \n  .wrapper {\n    background: #1c1c1c;\n    color: white;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    height: 100%;\n    flex-direction: column;\n  }\n  \n  .buttons {\n    display: flex;\n    gap: 20px;\n  }\n  \n  button {\n    height: 100px;\n    width: 100px;\n    font-size: 48px;\n    border-radius: 30px;\n    cursor: pointer;\n    \n  }\n  \n  .resultContainer {\n    font-size: 2rem;\n    text-align: center;\n    margin-top: 20px;\n  }\n  \n  "
source
: 
"day7.css"
[[Prototype]]
: 
Object
24
: 
pageContent
: 
"<!DOCTYPE html>\n<html>\n\n<head>\n  <meta charset=\"utf-8\">\n  <meta name=\"viewport\" content=\"width=device-width\">\n  <title>replit</title>\n  <link href=\"day7.css\" rel=\"stylesheet\" type=\"text/css\" />\n</head>\n\n<body>\n  <div class=\"wrapper\">\n  <div class=\"buttons\">\n    <button class=\"rpsButton\" value=\"Rock\">🪨</button>\n    <button class=\"rpsButton\" value=\"Paper\">📄</button>\n    <button class=\"rpsButton\" value=\"Scissors\">✂️</button>\n  </div>\n  <div class=\"resultContainer\">\n  <div id=\"player-score\"></div>\n  <div id=\"hands\"></div>\n  \n  <div id=\"result\"></div>\n\n  <button id='endGameButton'>🛑</button>\n  </div>\n  </div>\n  \n  <script src=\"day7.js\"></script>\n</body>\n\n</html>"
source
: 
"day7.html"
[[Prototype]]
: 
Object
25
: 
pageContent
: 
"// THIS IS ABOUT CREATING AN APP CALLED ROCKPAPERSCISSOR\n\nconst totalScore = { \n   computerScore: 0,\n   playerScore: 0\n}\n\n\nconst getComputerChoice = () => {//--3\n/* it is the first function to be called */\n\n  let randomNumber = Number(Math.random()*2)\n  let computerNumber = randomNumber.toFixed(0)\n  let choiceArray = ['Rock','Paper','Scissor']\n  const computerChoice = choiceArray[computerNumber]\n\n  return computerChoice\n}\n\n\n  \nlet getResult = (playerChoice, computerChoice) => {//--4\n  /*  it is the second function to be called. it compares\n     the computer and the player's choice and produce a result\n     */\n\n  let score;\n  if (playerChoice == computerChoice){\n    score = 0 \n  }\n  else if((playerChoice === 'Rock' && computerChoice === 'Scissors')\n  || (playerChoice === 'Scissors' && computerChoice === 'Paper')\n  || (playerChoice === 'Paper' && computerChoice === 'Rock')\n  ){\n    score = 1\n  }\n  else{\n    score = -1\n  }\n  return score\n}\n\nconst showResult = (score, playerChoice, computerChoice) =>{//--5\n  /*we show the result in the web through DOM*/ \n\n  const resultDiv = document.getElementById('result')\n  const handDiv = document.getElementById('hands')\n  const playerScoreDiv = document.getElementById('palyer-score')\n  if(score == -1){\n    resultDiv.innerText('You Lose this time')\n  }\n  else if(score == 1){\n    resultDiv.innerText('You Win this time')\n  }\n  else {\n    resultDiv.innerText('--DRAW--')\n  }\n   \n  handDiv.innerText = `🧔🏻‍♂️${playerChoice} vs 🤖${computerChoice}`\n  playerScoreDiv.innerText = `your Score:${totalScore.playerScore}`\n}\n\n let onClickRPS = (playerChoice) => {//--2\n/*the whole code for the game play is here\n  all the logic functions are called here(MAIN function)*/ \n\n  const computerChoice = getComputerChoice() //-2-got computerchoice\n  console.log(computerChoice)\n  const score = getResult(playerChoice,computerChoice)  //-got who won this time\n  totalScore.playerScore += score\n  console.log(totalScore)\n  showResult(score,playerChoice,computerChoice)\n\n}\n\nlet playGame = () => {//--1\n  /*the game starts here, we get the value and\n  if it is rps button => goes to onCickRPS()\n  else it is endGameButton => goes to endGameButton()\n  */\n  const rpsButton = document.querySelectorAll('.rpsButton')\n  rpsButton.forEach(rpsButton => {\n    rpsButton.onclick = () => onClickRPS(rpsButton.value)\n\n    }) \n\n  const endGameButton = document.getElementById('endGameButton')\n  endGameButton.onclick = () => endGame(totalScore)\n}\n\nfunction endGame(totalScore) {//--6\n  /* it is called by the playGame() if the user click endGameButton\n     it clears all the values in the web using DOM */\n\n  totalScore.playerScore = 0\n  totalScore.computerScore = 0\n\n  const resultDiv = document.getElementById('result')\n  const handDiv = document.getElementById('hands')\n  const playerScoreDiv = document.getElementById('palyer-score')\n\n  resultDiv.innerText = ''\n  handDiv.innerText = ''\n  playerScoreDiv.innerText = ''\n}\n\nplayGame()"
source
: 
"day7.js"
[[Prototype]]
: 
Object
26
: 
pageContent
: 
"<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>API</title>\n</head>\n<body>\n    <DIV id=\"header\">\n             <h2>hello world</h2>\n    </DIV>\n    <div id=\"random-dog-image\">\n          <img src=\"\" alt=\"\">\n    </div>\n    <div >\n        <button id=\"button\">\n            generate\n        </button>\n    </div>\n    <script src=\"day8.js\"></script>\n</body>\n</html>"
source
: 
"day8.html"
[[Prototype]]
: 
Object
27
: 
pageContent
: 
"  // API\n\n  /*  ---CONCEPTS---\n  we use api to get some info that we need from other databases \n  meaning we dont need do all those (calculation/coding part) \n  by ourselves\n\n   it follows a method of asynchronous programming \n   (meaning just like the previous codes it does not execute line by line)\n\n    */\n\nconst randomDogDiv = document.getElementById('random-dog-image')\nconst button = document.getElementById('button')\n\nconsole.log('the first block');\nconst generate = () => {\n\nfetch('https://dog.ceo/api/breeds/image/random') //we've sent a request here\n .then(response => response.json())  // we declare here get the response as a JSON file\n .then(json => {\n    randomDogDiv.innerHTML = `<img src='${json.message}'>`\n })\n}\n console.log('the third block');\n\n button.onclick = () =>{\n    generate()\n }"
source
: 
"day8.js"
[[Prototype]]
: 
Object
28
: 
pageContent
: 
"//PROMISES\n   /*a concept of synchronous programming \n    */\n\nconst waitingForSoup = () => console.log('soup')\n\nsetTimeout(waitingForSoup,2000)\n//2000 refers 2seconds of delay\n\nconst promise1 = new Promise ((resolve, reject) => {\n    setTimeout(() =>{\n        isReady = true\n\n        //setting it random \n        isReady = [true,ffalse][Math.floor(Math.random()*2)]\n        isReady ? resolve('soup ready'): reject('no soup')\n    },2000)\n    //we used a ternary operator here\n})\n\nconsole.log(\n    promise1\n    .then(sucess => console.log({sucess}))\n    .catch (error => console.log({error}))\n    )\n\n    console.log('fetch :',\n    fetch('HTTPS://dog.ceo/api/breeds/image/random') //=> 1st promise\n    .then(response => response.json()) //=>2nd promise\n    .then(data => console.log(data))\n    )\n\n// From here we are going to do this in the ES6 way\n\nconst getDog = async () => {\n    //async makes the following code as asynchronous\n\n    const url = 'HTTPS://dog.ceo/api/breeds/image/random'\n    const response = await fetch(url)\n    //await - it is the other way of .then \n    //to use await you need to declare the function as async\n\n    const data = await response.json()\n    console.log(data);\n}\n\n//CREATING A PROGRAM BASED ON THE EXPERIENCE OF THE HOTEL ON ODERING A SOUP\n\nconst getSoup = async () =>{\n    const data = {\n        rating :0,\n        tip:0,\n        pay:0,\n        review:0\n    }\n    try {\n        const soup = await promise1 //=>promise1 is already defined in line 10\n        console.log(soup);\n        data.rating = 5\n        data.tip = .2\n        data.pay = 10\n        data.review = 5\n        return data\n        \n    } catch (error) {\n        console.log(error)\n        data.rating = 1\n        data.tip = 0\n        data.pay = 0\n        data.review = 1\n        return data\n    }\n}\n\ngetSoup().then(value => console.log(value))\n\n"
source
: 
"day9.js"
[[Prototype]]
: 
Object
29
: 
pageContent
: 
"<!DOCTYPE html> \n\n<meta name=\"keywords\" content=\"html',css\">\n<meta http-equiv=\"X-UA-Compatible\" content=\"IE=7\">\n<meta name=\"description\" content=\"this website is all about learing to code\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<meta http-equiv=\"Content-Type\" content=\"text/html;charset=UTF-8\">\n\n<head> \n    <title>hello </title>  \n</head>\n<body>\n\n  <header>\n     <a href=\"sample.html\" >next page <B>YES</B> TO CHECK</a>\n\n\n    <!--JAVASCRIPT BEGINS--> \n    \n    <h1 id=\"sometext\"></h1>\n    <h2 id=\"name\"></h2>\n     <script src=\"scripting.js\" > \n       \n       \n     </script>\n\n\n  </header>\n    <!--header tags-->\n    <h1>hey there</h1> \n    <h2 style=\"color: aquamarine ;\"> hello world</h2>\n    <h3>yo bro</h3>\n    <h4> hello world</h4>\n\n    <!-- Paragraph tags-->\n    <p>India is my country all indians are my brothers and sisters exept few</p>\n    <p>India is my country all indians are my brothers and sisters exept few</p>\n    <p>India is my country all indians are my brothers and sisters exept few</p>\n    <p>India is my country all indians are my brothers and sisters exept few</p>\n    <p>India is my country all indians are my brothers and sisters exept few</p>\n \n    <!--pasting links from youtube-->\n    <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/FNGoExJlLQY\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n    \n    <!--images-->\n    <img src=\"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fimages.techhive.com%2Fimages%2Farticle%2F2016%2F01%2Fntfs-14-mac-icon-100640600-gallery.jpg&f=1&nofb=1\" alt=\" its quiet long\">\n\n     <p> <a href=\"www.instagram.com/js_grazon\" target=\"blank\">check out my profile </a></p>\n \n     <!--unordered list-->\n     <ul>\n         <li>apple</li>\n         <li>microsoft</li>\n         <li>amazon</li>\n         <li>goolge</li>\n         <li>meta</li>\n     </ul>\n\n     <!--ordered list-->\n     <ol>\n         <li>apple</li>\n         <li>microsoft</li>\n         <li>amazon</li>\n         <li>goolge</li>\n         <li>meta</li>\n     </ol>\n\n    <!--forms and divisions-->\n     <form action=\"www.google.com\" method=\"get\">visit google.com</form>\n     <form action=\"/\" method=\"get\">\n\n        <div>\n          <label for=\"name\">ur name plz</label>\n          <input type=\"text\" name=\"NAME da\" id=\"\">\n        </div>\n        \n        <div>\n          <label for=\"email\">E-mail</label>\n          <input type=\"email\" name=\"email\" id=\"\">\n        </div>\n\n        <input type=\"submit\" value=\"click me\" name=\"\"  id=\"\">\n        \n    </form>\n\n    <!--selections-->\n    <select>\n         <option value=\"india\">maruthi</option>\n         <option value=\"germany\">VOLKSWAGEN</option>\n         <option value=\"ITALY\">ferrari</option>\n         <option value=\"america\">ford  </option>\n    </select>\n    \n    <!--tables-->\n    <table>\n        <thead>\n            <tr>\n              <th>s.no </th>\n              <th>brands</th>\n              <th>rating</th>\n            </tr> \n       </thead>\n\n        <tbody>\n            <tr>\n              <td>1</td>\n              <td>apple</td>\n              <td>4.6</td>\n            </tr>\n\n            <tr>\n              <td>2</td>\n              <td>google</td>\n              <td>4.6</td>\n            </tr>\n        </tbody>\n    </table>\n\n    <small>U GOT 100</small>\n    <b>india</b>\n     <i>hey</i>\n    <em>hey</em>\n\n    <footer>\n         <p>all copyrights reserved &trade; 2022</p>\n    </footer>\n\n</body>"
source
: 
"learn.html"
[[Prototype]]
: 
Object
30
: 
pageContent
: 
"    [\n        {\n            \"name\":\"big company\",\n            \"numberofemployees\":10000,\n            \"place\":\"NYC\",\n            \"rating\":\"4.2\"\n        },\n        { \n\n            \"name\":\"small company\",\n            \"numberofemployees\":1000,\n            \"place\":\"Chennai\",\n            \"rating\":\"4.7\",\n            \"ceo\":null\n        }\n    ]"
source
: 
"new.json"
[[Prototype]]
: 
Object
31
: 
pageContent
: 
"//making some comments in javascript----\n\nconsole.log('hello world');\n\n\n//variables in javascript----\n\nvar b = 'graceshon';\nconsole.log(b);\nvar num = 125;\nconsole.log(num);\n\n//DOM manupulation- changing html stuffs with JS------\n\ndocument.getElementById('sometext').innerHTML= 'this is javascript';\n\n//asking something to an user with prompt\n\nprompt('what\\'s your age');\nvar n1 = prompt('your name');\ndocument.getElementById('name').innerHTML=  n1;\n\n//NUMBERS -----\n\nvar n=100;\nconsole.log(n)\nconsole.log(n/10);\nvar num= n*5;\nnum += 20;\nnum--;\nconsole.log(num);\n\n//FUNCTIONS-----\n\n/* 1.create a funtion\n   2.call that function */\n   \nfunction grace()\n{\n    console.log('this is a function made by me');\n    console.log ('im new to javascript');\n}   \ngrace();\n\n/*getting a value  from the user and adding \nit with your name using functions*/\n\nfunction value()\n{\n    var v = prompt('enter a number');\n    console.log('india'+v);\n}\nvalue();\n\n//function with arguements\nfunction add(num1,num2)\n{\n   result=num1+num2;\n   console.log(result);\n}\nadd(10,25);\n\n//WHILE LOOPS----\n\nvar a = 1;\nwhile (a<5)\n{\n    console.log(a);\n    a++;\n}\n\n//FOR LOOPS----\n\nfor (let i = 0; i < 10; i++)\n{\n  console.log('this is a for loop');     \n}\n\n//DATA TYPES----\n\nlet myname = 'graceshon';                  //string\nlet myage = 18;                            //number\nlet objname = {first:'JS',last:'Grazon'};  //object(dictionary)\nlet me = false;                            //boolean\nlet food = ['apple','orange','banana'];    //array (list)\nlet random ;                               //undefined\nlet nothing = null;                        //null value \n\n //STRINGS HANDLING -----\n\n var fruit = 'banana,apple,mango,berry,orange';\n morefruits = 'apple \\n banana';\n \n console.log(fruit.length());\n console.log(fruit.indexOf('nan'));\n console.log(fruit.slice(2,6));\n console.log(fruit.replace('ban','123'));n\n console.log(fruit.toUpperCase());\n console.log(fruit.toLowerCase());\n console.log(fruit.charAt());\n console.log(fruit[2]);\n console.log(fruit.split(','));  //split by comma \n console.log(fruit.split(''));   //split by charector\n\n //ARRAYS----\n\nlet lang = ['php','django','swift','kotlin','typescript'];\nlet lang1 = new Array ('php','django','swift','kotlin','typescript');\nconsole.log(lang[2]);\nlang[3]= 'objective c';\n\nfor (let i = 0; i < lang.length; i++) {\n   console.log(lang[i]);  \n}\n\nconsole.log('to string',lang.toString());\nconsole.log(lang.join('*'));\nconsole.log(lang.pop(),lang);               // removes the last values of an array\nconsole.log(lang.push('javascript'),lang);  // addds a  new value to an array\nconsole.log(lang[4]); \nlang [lang.length] = 'new language';        // same as push \nconsole.log(lang);\nlang.shift();                               //removes first element from an array\nconsole.log(lang);\nlang.unshift('c');                          //adds first element to an array\nconsole.log(lang);\n\nlet data = ['sql','mysql','mongodb','jquery'];\nlet backend = data.concat(lang);  \nconsole.log(backend);\nconsole.log(backend.slice(1,4));\nconsole.log(backend.reverse());\nconsole.log(backend.sort());\n\nlet numbers = new Array(1,2,3,9,8,6,4,7);\nconsole.log(numbers.sort(function(a,b) {return a-b}));  //sorting in acending order \nconsole.log(numbers.sort(function(a,b) {return b-a}));  //sorting in decending order \n  \nlet emptyarray = new Array ();\nfor (var ea =0; ea<10 ; ea++);\n{\n  emptyarray.push(ea);\n}\nconsole.log(emptyarray);\n\n  //OBJECTS IN JAVASCRIPT----1\n\n\n  let info ={\n    name:'graceshon',\n    initial : 'JS',\n    age:18,\n    height : 170,\n    place : 'kanyakumari',\n    myinf0: function () {\n      return (this.age+ '\\n' + this.initial); \n    }\n  };\n\nconsole.log(info.name);\nconsole.log(info.age);\ninfo.height = '176';     //changes value\nconsole.log(info.height);\ninfo.height++;\n\n//CONDITIONALS----\n\nvar one=1;\nvar two=2;\nvar three = 3;\n\n//if conditions \n\nif ((one>two) && (one>three)) {\n  console.log(\"one is big\");\n}\nelse if (two>three){\n  console.log('two is big');\n}\nelse{\n  console.log('three is big ');\n}\n\n//switch statements\n\nswitch (6) {\n  case 0:\n    text= 'weekend';\n    break;\n  case 5:\n    text= 'weekend';\n    break;\n  case 6:\n    text= 'weekend';\n    break;  \n  default:\n    text= 'weekday';\n    break;\n}\n\nconsole.log(text);\n\n"
source
: 
"scripting.js"
[[Prototype]]
: 
Object
32
: 
pageContent
: 
"body {\n\tbackground-color: #F1EEEE;\n  }\n  \n  @media screen and (max-width: 800px) {\n\t  body {\n\t\t  background-color: coral;\n\t  }\n  }\n  \n  #header {\n\tposition: fixed;  \n\twidth: 100%;\n\ttop: 0px;\n\tbackground-color: #8B9DBC\n  }\n  \n  h1 {\n\tdisplay: inline;\n  }\n  \n  #nav-bar {\n\tfloat: right;\n\tpadding-top: 35px;\n\tpadding-right: 30px;\n  }\n  \n  .nav-link {\n\tcolor: black;\n  }\n  \n  #content {\n\tpadding-top: 75px;\n  }\n  \n  #about-us {\n\ttext-align: center;\n  }\n  \n  #about-us-list {\n\ttext-align: center;\n  }\n  \n  .about-us-list {\n\tdisplay: inline-block;\n\ttext-align: left;\n  }\n  \n  #sample-video {\n\ttext-align: center;\n\tpadding-top: 30px;\n\tpadding-bottom: 40px;\n  }\n  \n  #pricing {\n\ttext-align: center;\n\tpadding-top: 30px;\n\tpadding-bottom: 40px;\n  }\n  \n  .container {\n\tdisplay: flex;\n\tjustify-content:space-around;\n\tpadding-bottom: 30px;\n  }\n  \n  .box-1, .box-2, .box-3 {\n\ttext-align: center;\n\twidth: 100px;\n\theight: 80px;\n\tborder: 1px solid #000;\n\tborder-radius: 3px;\n  }\n  \n  #contact-us {\n\ttext-align: center;\n\tpadding-top: 30px;\n\tpadding-bottom: 40px;\n  }"
source
: 
"style.css"